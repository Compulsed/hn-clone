service: hn-clone-ddb

frameworkVersion: ">=1.8.0 <2.0.0"

custom:
  stage: ${opt:stage, self:provider.stage}
  config: ${file(./config/${opt:stage}.yml):config}
  dynamodb:
    links:
      tablename: ${opt:stage}-${self:service}-links
    users:
      tablename: ${opt:stage}-${self:service}-users

provider:
  name: aws
  runtime: nodejs6.10
  versionFunctions: false
  iamRoleStatements:
    - Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:table/${self:custom.dynamodb.links.tablename}
        - arn:aws:dynamodb:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:table/${self:custom.dynamodb.users.tablename}
      Effect: Allow

plugins:
  - serverless-plugin-typescript

functions:
  main:
    handler: src/main/index.handler
    environment:
      linkTable: ${self:custom.dynamodb.links.tablename}
  users:
    handler: src/main/users.handler
    environment:
      userTable: ${self:custom.dynamodb.users.tablename}

resources:
  Resources:
    LinkTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.links.tablename}
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        AttributeDefinitions:
          - AttributeName: link_id
            AttributeType: S
        KeySchema:
          - AttributeName: link_id
            KeyType: HASH  
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.users.tablename}
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH              