service: hn-clone-ddb

frameworkVersion: ">=1.8.0 <2.0.0"

custom:
  stage: ${opt:stage, self:provider.stage}
  config: ${file(./config/${opt:stage}.yml):config}
  dynamodb:
    links:
      tablename: ${opt:stage}-${self:service}-links
    users:
      tablename: ${opt:stage}-${self:service}-users

provider:
  name: aws
  runtime: nodejs6.10
  versionFunctions: false
  environment:
    SERVICE_STAGE: ${self:custom.stage}
  iamRoleStatements:
    - Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:table/${self:custom.dynamodb.links.tablename}*
        - arn:aws:dynamodb:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:table/${self:custom.dynamodb.users.tablename}*
      Effect: Allow
    - Action:
        - lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:${env:AWS_REGION}:${env:AWS_ACCOUNT_ID}:function:*
      Effect: Allow

plugins:
  - serverless-plugin-typescript

functions:
  bff:
    handler: src/bff/bff.handler
    events:
        - http:
            path: graphql
            method: post
            cors: true

  # Methods
  get-user:
    handler: src/backend/functions/user/get.handler
    environment:
      userTable: ${self:custom.dynamodb.users.tablename}

  get-users:
    handler: src/backend/functions/user/get-users.handler
    environment:
      userTable: ${self:custom.dynamodb.users.tablename}

  get-link:
    handler: src/backend/functions/link/get.handler
    environment:
      linkTable: ${self:custom.dynamodb.links.tablename}

  get-links:
    handler: src/backend/functions/link/get-links.handler
    environment:
      linkTable: ${self:custom.dynamodb.links.tablename}

  get-link-by-author-id:
    handler: src/backend/functions/link/get-by-author-id.handler
    environment:
      linkTable: ${self:custom.dynamodb.links.tablename}

  get-links-by-author-ids:
    handler: src/backend/functions/link/get-links-by-author-ids.handler
    environment:
      linkTable: ${self:custom.dynamodb.links.tablename}
  

  # Seed
  links-seed:
    handler: src/backend/seed/links.handler
    environment:
      linkTable: ${self:custom.dynamodb.links.tablename}
  users-seed:
    handler: src/backend/seed/users.handler
    environment:
      userTable: ${self:custom.dynamodb.users.tablename}

resources:
  Resources:
    LinkTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.links.tablename}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: link_id
            AttributeType: S
          - AttributeName: author_id
            AttributeType: S            
        KeySchema:
          - AttributeName: link_id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: link_by_author_id_index
            KeySchema:
             - AttributeName: author_id
               KeyType: HASH
             - AttributeName: link_id
               KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamodb.users.tablename}
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH